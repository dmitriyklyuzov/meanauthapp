{"version":3,"sources":["webpack:///./src/app/services/validate.service.ts","webpack:///./src/$_gendir async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/services/auth.service.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ValidateService {\n\n  constructor() { }\n\n  // validate registration form\n  validateRegister(user){\n  \tif(user.name == undefined || user.email == undefined || user.password == undefined){\n  \t\treturn false;\n  \t}\n  \telse{\n  \t\treturn true;\n  \t}\n  }\n\n  // validate email\n  validateEmail(email){\n  \t// regex\n  \tconst regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  \t// returns 'true' if email, false otherwise\n    return regex.test(email);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/validate.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 392;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_gendir async\n// module id = 392\n// module chunks = 1","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\n\n// Decorator for the component that allows to add metadata\n@Component({\n  // selector is an html tag to insert a component\n  selector: 'app-root',\n  // html file that's associated with a component\n  templateUrl: './app.component.html',\n  // stylesheet url for this particular component\n  styleUrls: ['./app.component.css']\n})\n// main class\nexport class AppComponent {\n  // setting 'title' to 'app works'\n  title = 'app works!';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","// Meeting place for all components\n// When we create a service or component we have to import it here\n\n// Modules\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule, Routes } from '@angular/router';\n\n// Flash messages module\nimport { FlashMessagesModule } from 'angular2-flash-messages';\n\n// Importing main app component - add these to 'declarations'\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\n\n// Importing services - add these to 'providers'\nimport { ValidateService } from './services/validate.service';\nimport { AuthService } from './services/auth.service';\n\n// Importing guards - add to the 'providers', add to the route to protect it\nimport { AuthGuard } from './guards/auth.guard';\n\n// Routes like routes/web.php\n// Every path maps to a Component\nconst appRoutes: Routes = [\n  // Home page\n  {path:'', component: HomeComponent},\n  {path:'register', component: RegisterComponent},\n  {path:'login', component: LoginComponent},\n  {path:'dashboard', component: DashboardComponent, canActivate:[AuthGuard]},\n  {path:'profile', component: ProfileComponent, canActivate:[AuthGuard]},\n]\n\n@NgModule({\n  // Adding main app component into declarations\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot(appRoutes),\n    FlashMessagesModule\n  ],\n  providers: [\n    ValidateService,\n    AuthService,\n    AuthGuard\n   ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/dashboard/dashboard.component.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/home/home.component.ts","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  // add email and password as component properties\n  email: String;\n  password: String;\n\n  // inject services and components\n  constructor(\n  \tprivate authService: AuthService,\n  \tprivate router: Router,\n  \tprivate flashMessages: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onLoginSubmit(){\n  \tconsole.log('Login form submitted...');\n  \t\n  \t// create user object\n  \tconst user = {\n  \t\temail: this.email,\n  \t\tpassword: this.password\n  \t}\n\n  \t// call auth service - subscribe to an observable\n  \tthis.authService.authenticateUser(user).subscribe(data => {\n  \t\t// if successfully logged in\n  \t\tif(data.success){\n  \t\t\tthis.authService.storeUserData(data.token, data.user);\n  \t\t\tthis.flashMessages.show('You are now logged in', {\n  \t\t\t\tcssClass: \"alert-success\",\n  \t\t\t\ttimeout: 3000\n  \t\t\t});\n  \t\t\tthis.router.navigate(['dashboard']);\n  \t\t}\n  \t\telse{\n  \t\t\t// Display a flash message from server\n  \t\t\tthis.flashMessages.show(data.msg, {\n  \t\t\t\tcssClass: \"alert-danger\",\n  \t\t\t\ttimeout: 3000\n  \t\t\t});\n  \t\t\t// redirect to login\n  \t\t\tthis.router.navigate(['login']);\n  \t\t}\n  \t});\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/login/login.component.ts","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n  \tprivate authService: AuthService,\n  \tprivate router: Router,\n  \tprivate flashMessages: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onLogoutClick(){\n  \t// call the logout() function of the AuthService\n  \tthis.authService.logout();\n  \t// Display a flash message\n  \tthis.flashMessages.show('You are now logged out', {\n  \t\tcssClass: 'alert-success',\n  \t\ttimeout: 3000\n  \t});\n  \t// Redirect to the login page\n  \tthis.router.navigate(['login']);\n  \treturn false; \n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/navbar/navbar.component.ts","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  user: Object;\n\n  constructor(\n  \tprivate authService: AuthService,\n  \tprivate router: Router\n  \t) { }\n\n  // do stuff on initialization\n  ngOnInit() {\n  \t// load user\n  \tthis.authService.getUserProfile().subscribe(\n  \t\tprofile => {\n  \t\t\tthis.user = profile.user;\n  \t\t},\n  \t\terr => {\n  \t\t\tconsole.log(err);\n  \t\t\treturn false;\n  \t\t});\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/profile/profile.component.ts","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from '../../services/validate.service';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  name: String;\n  email: String;\n  password: String;\n\n  // Any time we use a service in a component, we need to inject it in a constructor of that component\n  constructor(\n  \tprivate validateService: ValidateService,\n  \tprivate flashMessages: FlashMessagesService,\n  \tprivate authService: AuthService,\n  \tprivate router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onRegisterSubmit(){\n  \tconsole.log('Register form submitted...');\n  \t// Create an object from the form fields\n  \tconst user = {\n  \t\tname: this.name,\n  \t\temail: this.email,\n  \t\tpassword: this.password\n  \t}\n\n  \t// validate user using validateRegister function of the validateService service\n  \tif(!this.validateService.validateRegister(user)){\n  \t\tconsole.log('Validation failed - empty fields...');\n  \t\t// Display a flash message\n  \t\tthis.flashMessages.show('Please fill in all the fields', {cssClass: 'alert-danger', timeout: 3000});\n  \t\treturn false;\n  \t}\n\n  \t// validate email using validateEmail function of the validateService service\n  \tif(!this.validateService.validateEmail(user.email)){\n  \t\tconsole.log('Email validation failed...');\n  \t\t// Display a flash message\n  \t\tthis.flashMessages.show('Please use a valid email', {cssClass: 'alert-danger', timeout: 3000});\n  \t\treturn false;\n  \t}\n\n  \t// register user if passed validation\n  \t// use registerUser function of the AuthService service, subscribe to an observable\n  \tthis.authService.registerUser(user).subscribe(data => {\n  \t\t// if backend returns a success:true message\n  \t\tif(data.success){\n  \t\t\t// display a flash message\n  \t\t\tthis.flashMessages.show('User successfully registered', {cssClass: 'alert-success', timeout: 3000});\n  \t\t\t// redirect to login page\n  \t\t\tthis.router.navigate(['/login']);\n  \t\t}\n  \t\t// else - backend returned a success:false message, user not registered\n  \t\telse{\n  \t\t\t// display a flash message\n  \t\t\tthis.flashMessages.show('Something went wrong. Try again', {cssClass: 'alert-danger', timeout: 3000});\n  \t\t\t// redirect back to register\n  \t\t\tthis.router.navigate(['/register']);\n  \t\t}\n  \t});\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/register/register.component.ts","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate{\n\t\n\tconstructor(\n\t\tprivate authService: AuthService,\n\t\tprivate router: Router\n\t){}\n\n\tcanActivate(){\n\t\tif(this.authService.loggedIn()){\n\t\t\treturn true;\n\t\t}\n\t\telse{\n\t\t\t// redirect to login\n\t\t\tthis.router.navigate(['login']);\n\t\t\treturn false;\n\t\t}\n\t};\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/guards/auth.guard.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 679\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/dashboard/dashboard.component.css\n// module id = 680\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/home/home.component.css\n// module id = 681\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/login/login.component.css\n// module id = 682\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/navbar/navbar.component.css\n// module id = 683\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/profile/profile.component.css\n// module id = 684\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/register/register.component.css\n// module id = 685\n// module chunks = 1","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n\\t<flash-messages></flash-messages>\\n\\t<router-outlet></router-outlet>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 686\n// module chunks = 1","module.exports = \"<h2 class=\\\"page-header\\\">Dashboard</h2>\\n<p>Welcome to your dashboard</p>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/dashboard/dashboard.component.html\n// module id = 687\n// module chunks = 1","module.exports = \"<!-- Main jumbotron -->\\n<div class=\\\"jumbotron text-center\\\">\\n\\t<h1>MEAN Auth App</h1>\\n\\t<p class=\\\"lead\\\">Welcome to my custom MEAN authentication application built from scratch</p>\\n\\t<div>\\n\\t\\t<!-- Register -->\\n\\t\\t<a [routerLink]=\\\"['/register']\\\" class=\\\"btn btn-primary\\\">Register</a>\\n\\t\\t<!-- Login -->\\n\\t\\t<a [routerLink]=\\\"['/login']\\\" class=\\\"btn btn-default\\\">Login</a>\\n\\t</div>\\n</div>\\n\\n<!-- Three rows -->\\n<div class=\\\"row\\\">\\n\\t<div class=\\\"col-md-4\\\">\\n\\t\\t<h3>Express Backend</h3>\\n\\t\\t<p>A rock-solid Node.js/Express server using Mongoose to organize models and query the database.</p>\\n\\t</div>\\n\\t<div class=\\\"col-md-4\\\">\\n\\t\\t<h3>Angular-CLI</h3>\\n\\t\\t<p>Angular-CLI to generate components, services, and more. Local dev server and easy compulation.</p>\\n\\t</div>\\n\\t<div class=\\\"col-md-4\\\">\\n\\t\\t<h3>JWT Tokens</h3>\\n\\t\\t<p>Full-featured authentication using JSON web tokens. Login and store user data.</p>\\n\\t</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/home/home.component.html\n// module id = 688\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\n\\t<div class=\\\"col-md-6 col-md-offset-3\\\">\\n<h2 class=\\\"page-header\\\">Login</h2>\\n<form (submit)=\\\"onLoginSubmit()\\\">\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<label>Email</label>\\n\\t\\t<input type=\\\"text\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\">\\n\\t</div>\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<label>Password</label>\\n\\t\\t<input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\">\\n\\t</div>\\n\\t<input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Login\\\">\\n</form>\\n\\n</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/login/login.component.html\n// module id = 689\n// module chunks = 1","module.exports = \"<nav class=\\\"navbar navbar-default\\\" style=\\\"border-radius: 0px\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbar\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"navbar\\\">\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n      </button>\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">MEAN</a>\\n    </div>\\n    <div id=\\\"navbar\\\" class=\\\"collapse navbar-collapse\\\">\\n      <!-- Navbar-right -->\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\n              <!-- LOGGED IN -->\\n      \\t<!-- Profile -->\\n        <li \\n          *ngIf=\\\"authService.loggedIn()\\\"\\n          [routerLinkActive]=\\\"['active']\\\"\\n          [routerLinkActiveOptions] = \\\"{exact: true}\\\">\\n          <a [routerLink]=\\\"['profile']\\\">Profile</a>\\n        </li>\\n        <!-- Dashboard -->\\n        <li\\n          *ngIf=\\\"authService.loggedIn()\\\"\\n          [routerLinkActive]=\\\"['active']\\\"\\n          [routerLinkActiveOptions] = \\\"{exact: true}\\\">\\n          <a [routerLink]=\\\"['dashboard']\\\">Dashboard</a>\\n        </li>\\n        <!-- Logout -->\\n        <li *ngIf=\\\"authService.loggedIn()\\\">\\n          <a href=\\\"#\\\" (click)=\\\"onLogoutClick()\\\">Logout</a>\\n        </li>\\n\\n              <!-- NOT LOGGED IN -->\\n        <!-- Login -->\\n        <li\\n          *ngIf=\\\"!authService.loggedIn()\\\"\\n          [routerLinkActive]=\\\"['active']\\\"\\n          [routerLinkActiveOptions] = \\\"{exact: true}\\\">\\n        \\t<a [routerLink]=\\\"['login']\\\">Login</a>\\n        </li>\\n        <!-- Register -->\\n        <li\\n          *ngIf=\\\"!authService.loggedIn()\\\"\\n          [routerLinkActive]=\\\"['active']\\\"\\n          [routerLinkActiveOptions] = \\\"{exact: true}\\\">\\n        \\t<a [routerLink]=\\\"['register']\\\">Register</a>\\n        </li>\\n      </ul>\\n\\n    </div><!--/.nav-collapse -->\\n  </div>\\n</nav>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/navbar/navbar.component.html\n// module id = 690\n// module chunks = 1","module.exports = \"<!-- Make sure there is a user before loading this view -->\\n<div *ngIf=\\\"user\\\">\\n\\t<h2 class=\\\"page-header\\\">{{user.name}}</h2>\\n\\t<ul class=\\\"list-group\\\">\\n\\t\\t<li class=\\\"list-group-item\\\">{{user.email}}</li>\\n\\t</ul>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/profile/profile.component.html\n// module id = 691\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\n\\t<div class=\\\"col-md-6 col-md-offset-3\\\">\\n<h2 class=\\\"page-header\\\">Register</h2>\\n<form (submit)=\\\"onRegisterSubmit()\\\">\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<label>Name</label>\\n\\t\\t<input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" class=\\\"form-control\\\">\\n\\t</div>\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<label>Email</label>\\n\\t\\t<input type=\\\"text\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\">\\n\\t</div>\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<label>Password</label>\\n\\t\\t<input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\">\\n\\t</div>\\n\\t<input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\">\\n</form>\\n\\n</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/register/register.component.html\n// module id = 692\n// module chunks = 1","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { tokenNotExpired } from 'angular2-jwt';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class AuthService {\n\n\t// Properties\n\tauthToken: any;\n\tuser: any;\n\n  constructor(private http: Http) { }\n\n  /* functions */\n\n  // register user\n  registerUser(user){\n  \t// set a header value\n  \tlet headers = new Headers();\n  \theaders.append('Conent-Type', 'application/json');\n\n  \t// create an observable - POST user object to the endpoint along with headers\n  \treturn this.http.post('http://localhost:3000/users/register', user, {headers})\n  \t  .map(res => res.json());\n  }\n\n  // authenticate user\n  authenticateUser(user){\n    // set a header value\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n\n    // create an observable - make a POST request to the /authenticate endpoint with headers\n    return this.http.post('http://localhost:3000/users/authenticate', user, {headers})\n      .map(res => res.json()); /* returns a token and user info if success:true, else returns success:false */\n  }\n\n  // get profile path\n  getUserProfile(){\n    // set a header value\n    let headers = new Headers();\n    // load token from local storage\n    this.loadToken();\n    // set content type header\n    headers.append('Content-Type', 'application/json');\n    // set authorization header\n    headers.append('Authorization', this.authToken);\n\n    // create an observable - make a GET request to the /profile endpoint with headers\n    return this.http.get('http://localhost:3000/users/profile', {headers})\n      .map(res => res.json()); /* returns a token and user info if success:true, else returns success:false */\n  }\n\n  // fetch token from local storage\n  loadToken(){\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n\n  // store user data\n  storeUserData(token, user){\n    // store token in local storage (angular-jwt looks for the id_token path by default)\n    localStorage.setItem('id_token', token);\n    // store user in local storage (local storage can only store strings, so we're converting a JSON user to a String)\n    localStorage.setItem('user', JSON.stringify(user));\n    // set local properties\n    this.authToken = token;\n    this.user = user;\n  }\n\n  // logout\n  logout(){\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n\n  }\n\n  // check to see if we are logged in (actually to see if the token is not expired)\n  loggedIn(){\n    return tokenNotExpired('id_token');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/auth.service.ts"],"sourceRoot":""}